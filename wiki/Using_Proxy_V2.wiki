#summary Setting Proxy for jPlurk / 在 Proxy 環境使用 jPlurk
#labels Featured

= 如何設定代理伺服器 =

== 於 config 中預設 Proxy ==

如 [jplurkV2] 中的 *建立 config 檔* 一節所述。

== 動態啟動變數 ==
jPlurk 是以 Java 開發的函式庫，它能接受 Java 應用程式動態啟動變數。
若您需要指定 Http Proxy 那麼可以在啟動程式時加上 *proxyHost* 參數：

{{{
   java -DproxyHost=proxy.mydomain.com your.plurk.agent.Main 
}}}

您也能加上 *proxyPort* 參數指定連線埠號：

{{{
   java -DproxyHost=proxy.mydomain.com -DproxyPort=3128 your.plurk.agent.Main 
}}}


同樣的，我們能夠使用 *proxyUser* 與 *proxyPassword* 指定使用者帳號：

{{{
   java -DproxyHost=proxy.mydomain.com -DproxyPort=3128 -DproxyUser=socks_proxy.mydomain.com -DproxyPassword=3128 your.plurk.agent.Main 
}}}

== 於程式中設定 ==

在程式中使用 !ProxyProvider 設定。

{{{
import javax.swing.JOptionPane;

import org.json.JSONObject;

import com.google.jplurk.PlurkClient;
import com.google.jplurk.PlurkSettings;
import com.google.jplurk.Qualifier;
import com.google.jplurk.exception.PlurkException;
import com.google.jplurk.net.ProxyProvider;

public class PlurkIt {
    public static void main(String[] args) throws PlurkException {
        ProxyProvider.setProvider("proxy.mydomain.com", 3128);
        PlurkSettings settings = new PlurkSettings();
        PlurkClient client = new PlurkClient(settings);
        JSONObject ret = client.login(
                JOptionPane.showInputDialog("id"),
                JOptionPane.showInputDialog("password"));
        System.out.println(ret);

        ret = client.plurkAdd("Plurk It with jPlurk http://code.google.com/p/jplurk/wiki/jplurkV2", Qualifier.SHARES);
        System.out.println(ret);
    }
}

}}}

== 優先權 ==

優先權由高到低為：
  # 程式中設定
  # 動態啟動變數
  # Config 檔設定

== 延伸閱讀 ==

  * [http://code.google.com/p/jplurk/wiki/Introduction jPlurk 簡介]
  * [http://code.google.com/p/jplurk/wiki/jplurkV2 jPlurk v2 使用簡介與實作狀態]
