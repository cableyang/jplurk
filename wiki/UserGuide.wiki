#summary User Guide for jPlurk version 2.x / jPlurk version 2.x 使用指引
#labels Featured

= Hello jPlurk =

There is a simple example to get the user's profile:
 * creates the ISettings instance used by PlurkClient
 * does login user before use other api commands the PlurkClient provided
 * executes getownProfile() for example 

{{{
// create settings from ${USER_HOME}/jplurk.properties
ISettings settings = new PlurkSettings();
PlurkClient client = new PlurkClient(settings);

// sign in the plurk account
client.login("[user_id]", "[user_password]");

// get user's profile
JSONObject profile = client.getOwnProfile();
}}}

== About ISettings ==

ISettings is an interface which provides the information about the api key, default lang, etc. PlurkClient will pick up ISettings to initialize itself.
We provide com.google.jplurk.PlurkSettings and com.google.jplurk.ISettings.Simple classes. 
PlurkSettings instantiates from a external property file. 
ISettings.Simple instantiates by arguments:

{{{
ISettings.Simple settings = new Simple("[api_key]", Lang.tr_ch);
}}}

= Using jPlurk with Proxy =

    please refer to: http://code.google.com/p/jplurk/wiki/Using_Proxy_V2
    
= Using Realtime API =

    In r440, we implement the [http://www.plurk.com/API#realtime Realtime notifications] api.
    The /API/Realtime/getUserChannel api will return a comet server url and inovke HTTP GET to get notifications.
    In jPlurk, we use event-listener model to design it.
    
{{{
PlurkNotifier notifier = client.getUserChannel();
notifier.addNotificationListener(new NotificationListener() {
    @Override
    public void onNotification(JSONObject message) throws Exception {
        // do something with notification
    }
});

// PlurkNotifer is a subclass of TimerTask.
// You can schedule it in Timer Thread.
Timer timer = new Timer();
timer.schedule(notifier, new Date(), 10 * 1000);
}}}